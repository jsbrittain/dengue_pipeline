# Step 5a: Subsampler DENV
configfile: "config/config.yaml"


indir = config["input_namespace"]
outdir = config["output_namespace"]
params = config["params"]


def script(name=""):
    from snakemake.remote import AUTO

    filename = srcdir(f"scripts/{name}")
    try:
        return AUTO.remote(filename)
    except TypeError:
        return filename


def resource(name=""):
    import os
    from snakemake.remote import AUTO

    try:
        return AUTO.remote("/".join([srcdir("."), "..", "resources", name]))
    except TypeError:
        import os

        return os.path.join(srcdir("."), "..", "resources", name)


for serotype_item in params["Serotypes"]:
    serotype_code = serotype_item["Serotype"]
    denv_name = serotype_item["Filename"]

    rule:
        name:
            f"subsample_{denv_name}"
        input:
            fasta_file=f"results/{indir['fasta']}/{denv_name}_EG.fasta",
            metadata_file=f"results/{indir['metadata']}/Unaligned_{denv_name}_infoTbl.csv",
            location_local=resource("number_of_sequences.csv"),
            script=script("subsampler.R"),
        output:
            subsample_fasta=f"results/{outdir}/subsampled_{denv_name}.fasta",
            subsample_csv=f"results/{outdir}/subsampled_{denv_name}_infoTbl.csv",
            subsample_tsv=f"results/{outdir}/subsampled_{denv_name}_infoTbl.tsv",
        params:
            number_sequences_local=params["Number of sequences (local)"],
            number_sequences_background=params["Number of sequences (background)"],
            time_interval=params["Time Interval"],
            sampling_method=params["Sampling Method"],
            serotype=serotype_code,
            denv_name=denv_name,
            output_dir=f"results/{outdir}/",
        log:
            f"logs/subsample_{denv_name}.log",
        message:
            f"Subsampling {denv_name} sequences based on specified criteria."
        conda:
            "envs/conda.yaml"
        shell:
            """
            rscript {input.script} \
                --metadata {input.metadata_file} \
                --fasta {input.fasta_file} \
                --location_local {input.location_local} \
                --number_sequences_local {params.number_sequences_local} \
                --number_sequences_background {params.number_sequences_background} \
                --time_interval {params.time_interval} \
                --sampling_method {params.sampling_method} \
                --outfile {params.output_dir}/subsampled_{params.denv_name} \
                --output_dir {params.output_dir} \
                --serotype {params.serotype} > {log} 2>&1
            """


rule _test:
    input:
        f"results/{outdir}/subsampled_Dengue_1.fasta",
        f"results/{outdir}/subsampled_Dengue_2.fasta",
        f"results/{outdir}/subsampled_Dengue_3.fasta",
        f"results/{outdir}/subsampled_Dengue_4.fasta",
