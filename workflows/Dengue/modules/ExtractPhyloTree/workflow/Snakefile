configfile: "config/config.yaml"
indir = config["input_namespace"]
outdir = config["output_namespace"]

def script(name=""):
    from snakemake.remote import AUTO

    filename = srcdir(f"scripts/{name}")
    try:
        return AUTO.remote(filename)
    except TypeError:
        return filename

rule extract_phylogenetic_tree:
    input:
        json_file = f"results/{indir}/dengue_{{serotype}}.json",
        script = script("extract_tree_from_json.py"),
    output:
        nexus_file = f"results/{outdir}/dengue_{{serotype}}_timetree.nexus"
    conda:
        "envs/python_env.yaml"
    log:
        "logs/extract_tree_{serotype}.log"
    message:
        "Extract annotated tree from nextstrain JSON format ({{serotype}})"
    shell:
        """
        python {input.script} {input.json_file} {output.nexus_file}
        """

rule _test:
    input:
        f"results/{outdir}/dengue_Dengue_1_timetree.nexus",
        f"results/{outdir}/dengue_Dengue_2_timetree.nexus",
        f"results/{outdir}/dengue_Dengue_3_timetree.nexus",
        f"results/{outdir}/dengue_Dengue_4_timetree.nexus",
