# Step 7: Infer "ancestral" mutations across the tree
configfile: "config/config.yaml"


indir = config["input_namespace"]
outdir = config["output_namespace"]


rule mutations:
    input:
        aln=f"results/{indir['metadata']}/subsampled_{{serotype}}.fasta",
        time_tree=f"results/{indir['fasta']}/timetree_{{serotype}}.tree",
    output:
        mutations=f"results/{outdir}/subsampled_{{serotype}}_mutations.json",
    conda:
        "envs/nextstrain_all.yaml"
    log:
        "logs/mutations_{serotype}.log",
    message:
        "Infer ancestral mutations across the tree"
    params:
        outdir=f"results/{outdir}",
    shell:
        """
        augur ancestral \
            --tree {input.time_tree} \
            --alignment {input.aln} \
            --inference joint \
            --output-node-data {output.mutations} > {log} 2>&1
        """


rule _test:
    input:
        f"results/{outdir}/subsampled_Dengue_1_mutations.json",
        f"results/{outdir}/subsampled_Dengue_2_mutations.json",
        f"results/{outdir}/subsampled_Dengue_3_mutations.json",
        f"results/{outdir}/subsampled_Dengue_4_mutations.json",
