configfile: "config/config.yaml"

indir = config["input_namespace"]
outdir = config["output_namespace"]

def script(name=""):
    from snakemake.remote import AUTO

    filename = srcdir(f"scripts/{name}")
    try:
        return AUTO.remote(filename)
    except TypeError:
        return filename

rule tree_breakdown:
    input:
        tree_file = f"results/{indir}/dengue_{{serotype}}_timetree.nexus",
        script = script("DENV_tree_breakdown.py"),
    output:
        tsv_file = f"results/{outdir}/dengue_{{serotype}}_timetree_extracted.tsv"
    conda:
        "envs/python_env.yaml"
    log:
        "logs/extract_information_from_tree_{{serotype}}.log"
    message:
        "Extract information from annotated tree ({{serotype}})"
    shell:
        """
        python {input.script} {input.tree_file} {output.tsv_file}
        """

rule _test:
    input:
        f"results/{outdir}/dengue_Dengue_1_timetree_extracted.tsv",
        f"results/{outdir}/dengue_Dengue_2_timetree_extracted.tsv",
        f"results/{outdir}/dengue_Dengue_3_timetree_extracted.tsv",
        f"results/{outdir}/dengue_Dengue_4_timetree_extracted.tsv",
