configfile: "config/config.yaml"


indir = config["input_namespace"]
outdir = config["output_namespace"]


def script(name=""):
    from snakemake.remote import AUTO

    filename = srcdir(f"scripts/{name}")
    try:
        return AUTO.remote(filename)
    except TypeError:
        return filename


rule reformatting:
    input:
        fasta_file=f"results/{indir}/subsampled_{{serotype}}.fasta",
        metadata_file=f"results/{indir}/subsampled_{{serotype}}_infoTbl.csv",
        script=script("reformatting_iqtree_treetime.R"),
    output:
        cleaned_fasta=f"results/{outdir}/subsampled_{{serotype}}.fasta",
        cleaned_metadata=f"results/{outdir}/subsampled_{{serotype}}_infoTbl.csv",
    log:
        "logs/reformatting_{serotype}.log",
    conda:
        "envs/reformatting.yaml"
    message:
        "Reformat metadata and fasta files into the correct format for iqtree and treetime"
    shell:
        """
        Rscript {input.script} \
            --metadata {input.metadata_file} \
            --fasta {input.fasta_file} \
            --output_dir_fasta {output.cleaned_fasta} \
            --output_dir_csv {output.cleaned_metadata} \
            > {log} 2>&1
        """


rule _test:
    input:
        f"results/{outdir}/subsampled_Dengue_1.fasta",
        f"results/{outdir}/subsampled_Dengue_2.fasta",
        f"results/{outdir}/subsampled_Dengue_3.fasta",
        f"results/{outdir}/subsampled_Dengue_4.fasta",
