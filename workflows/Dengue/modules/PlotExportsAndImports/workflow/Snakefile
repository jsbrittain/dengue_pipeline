configfile: "config/config.yaml"
indir = config["input_namespace"]
outdir = config["output_namespace"]
params = config["params"]

def script(name=""):
    from snakemake.remote import AUTO

    filename = srcdir(f"scripts/{name}")
    try:
        return AUTO.remote(filename)
    except TypeError:
        return filename

rule plot_exports_and_imports:
    input:
        metadata = f"results/{indir}/dengue_{{serotype}}_timetree_extracted.tsv",
        script = script("plot_exports_and_imports.R"),
    output:
        imports = f"results/{outdir}/imports_{{serotype}}.csv",
        exports = f"results/{outdir}/exports_{{serotype}}.csv"
    params:
        country = params["Country"],
        serotype = "{serotype}",
        outdir = f"results/{outdir}/",
    conda:
        "envs/conda.yaml"
    log:
        "logs/exports_and_imports_{{serotype}}.log"
    message:
        "Quantify number of exports and imports from desired country ({{serotype}})"
    shell:
        """
        rscript {input.script} \
            --metadata {input.metadata} \
            --output_dir {params.outdir} \
            --output_dir_export {output.exports} \
            --output_dir_import {output.imports} \
            --country {params.country} \
            --serotype {params.serotype}
        """

rule _test:
    input:
        f"results/{outdir}/imports_Dengue_1.csv",
        f"results/{outdir}/exports_Dengue_1.csv",
        f"results/{outdir}/imports_Dengue_2.csv",
        f"results/{outdir}/exports_Dengue_2.csv",
        f"results/{outdir}/imports_Dengue_3.csv",
        f"results/{outdir}/exports_Dengue_3.csv",
        f"results/{outdir}/imports_Dengue_4.csv",
        f"results/{outdir}/exports_Dengue_4.csv",
